{"ast":null,"code":"var _jsxFileName = \"/home/javier/React/images-classificator/images_front/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false,\n      recentImage: null\n    };\n    // componentDidMount() {\n    //     this.getImages()\n    // } \n    // getImages = () => {\n    //     axios.get('http://127.0.0.1:8000/api/images/', {\n    //         headers: {\n    //             'accept': 'application/json'\n    //         }\n    //     })\n    //     .then(resp => {\n    //         console.log(resp)\n    //     })\n    //     .catch((err) => {\n    //         console.error(err)\n    //     })\n    // }\n    this.onDrop = files => {\n      this.setState({\n        isLoading: true\n      });\n      this.loadImage(files);\n    };\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files);\n        });\n      }, 1000);\n    };\n    this.activateSpinner = () => {\n      this.setState({\n        files: [],\n        isLoading: true\n      });\n    };\n    this.deactivateSpinner = () => {\n      this.setState({\n        isLoading: false\n      });\n    };\n    this.sendImageHandler = () => {\n      this.activateSpinner();\n      let formData = new FormData();\n      formData.append('picture', this.state.files[0], this.state.files[0].name);\n      axios.post('http://127.0.0.1:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        this.getImageClass(resp);\n        console.log(resp.data.id);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.getImageClass = obj => {\n      axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        this.setState({\n          recentImage: resp\n        });\n        console.log(resp);\n      }).catch(err => {\n        console.error(err);\n      });\n      this.deactivateSpinner();\n    };\n  }\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onDrop,\n      children: ({\n        isDragActive,\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps({\n            className: 'dropzone back'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: isDragActive ? \"Drop some images\" : \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: files\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          size: \"lg\",\n          className: \"mt-3\",\n          onClick: this.sendImageHandler,\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), this.state.recentImage && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"primary\",\n          children: \"Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Classifier;","map":{"version":3,"names":["React","Component","Dropzone","Alert","Button","Spinner","axios","jsxDEV","_jsxDEV","Classifier","constructor","args","state","files","isLoading","recentImage","onDrop","setState","loadImage","setTimeout","console","log","activateSpinner","deactivateSpinner","sendImageHandler","formData","FormData","append","name","post","headers","then","resp","getImageClass","data","id","catch","err","error","obj","get","render","map","file","children","size","fileName","_jsxFileName","lineNumber","columnNumber","isDragActive","getRootProps","getInputProps","className","length","variant","onClick","animation","role"],"sources":["/home/javier/React/images-classificator/images_front/src/components/Classifier/Classifier.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass Classifier extends Component {\n    state = {\n        files: [],\n        isLoading: false,\n        recentImage: null,\n    }\n\n    // componentDidMount() {\n    //     this.getImages()\n    // } \n    // getImages = () => {\n    //     axios.get('http://127.0.0.1:8000/api/images/', {\n    //         headers: {\n    //             'accept': 'application/json'\n    //         }\n    //     })\n    //     .then(resp => {\n    //         console.log(resp)\n    //     })\n    //     .catch((err) => {\n    //         console.error(err)\n    //     })\n    // }\n\n    onDrop = (files) => {\n        this.setState({\n            isLoading: true,\n        })\n        this.loadImage(files)\n    }\n\n    loadImage = (files) => {\n        setTimeout(() => {\n            this.setState({\n                files,\n                isLoading: false\n            }, () => {\n                console.log(this.state.files)\n            })\n        }, 1000);\n\n    }\n\n    activateSpinner = () => {\n        this.setState({\n            files: [],\n            isLoading:true\n        })\n    }\n\n    deactivateSpinner = () => {\n        this.setState({isLoading:false})\n    }\n\n    sendImageHandler = () => {\n        this.activateSpinner()\n        let formData = new FormData()\n        formData.append('picture', this.state.files[0], this.state.files[0].name)\n        axios.post('http://127.0.0.1:8000/api/images/', formData, {\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then(resp => {\n            this.getImageClass(resp)\n            console.log(resp.data.id)\n        })\n        .catch((err) => {\n            console.error(err)\n        })\n    }\n\n    getImageClass = (obj) => {\n        axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then(resp => {\n            this.setState({ recentImage: resp })\n            console.log(resp)\n        })\n        .catch((err) => {\n            console.error(err)\n        })\n        this.deactivateSpinner()\n    }\n\n    render() { \n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n                {file.name} - {file.size} bytes\n            </li>\n        ));\n        return (\n            <Dropzone onDrop={this.onDrop} >\n                {({isDragActive, getRootProps, getInputProps}) => (\n                <section className=\"container\">\n                    <div {...getRootProps({className: 'dropzone back'})}>\n                        <input {...getInputProps()} />\n                        <p className='text-muted'>{isDragActive ? \"Drop some images\" : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                    </div>\n                    <aside>\n                        {files}\n                    </aside>\n                    {this.state.files.length > 0 &&\n                        <Button variant='info' size='lg' className='mt-3' onClick={this.sendImageHandler}>Select Image</Button>\n                    }\n                    {this.state.isLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                    }\n                    {this.state.recentImage &&\n                        <Alert variant='primary'>\n                            Something\n                        </Alert>\n                    }\n                </section>\n                )}\n            </Dropzone>\n        );\n    }\n}\n \nexport default Classifier;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}