{"ast":null,"code":"var _jsxFileName = \"/home/javier/React/images-classificator/images_front/src/components/ImageList/ImageList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      visible: 3\n    };\n    this.getImages = () => {\n      axios.get('http://127.0.0.1:8000/api/images/', {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          images: resp.data\n        });\n        console.log(resp);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.handleVisible = () => {\n      let visible = this.state.visible;\n      let new_visible = visible + 2;\n      this.state({\n        visible: new_visible\n      });\n    };\n  }\n  componentDidMount() {\n    this.getImages();\n  }\n  render() {\n    let images = this.state.images.slice(0, this.state.visible).map(img => {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        picture: img.picture,\n        classification: img.classified\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), images, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        onClick: this.handleVisible,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ImageList;","map":{"version":3,"names":["React","Component","axios","Image","Button","jsxDEV","_jsxDEV","ImageList","constructor","args","state","images","visible","getImages","get","headers","then","resp","setState","data","console","log","catch","err","error","handleVisible","new_visible","componentDidMount","render","slice","map","img","picture","classification","classified","id","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","size","onClick"],"sources":["/home/javier/React/images-classificator/images_front/src/components/ImageList/ImageList.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button } from 'react-bootstrap';\n\nclass ImageList extends Component {\n    state = { \n        images: [],\n        visible: 3,\n     } \n\n    componentDidMount() {\n        this.getImages()\n    } \n\n    getImages = () => {\n        axios.get('http://127.0.0.1:8000/api/images/', {\n            headers: {\n                'accept': 'application/json'\n            }\n        })\n        .then(resp => {\n            this.setState({images: resp.data})\n            console.log(resp)\n        })\n        .catch((err) => {\n            console.error(err)\n        })\n    }\n\n    handleVisible = () => {\n        let visible = this.state.visible\n        let new_visible = visible + 2\n        this.state({visible: new_visible})\n    }\n\n    render() {\n        let images = this.state.images.slice(0, this.state.visible).map(img => {\n            return <Image key={img.id} picture={img.picture} classification={img.classified} />\n        }) \n        return (\n            <div>\n                <h1>Image List</h1>\n                {images}\n                <Button variant='primary' size='lg' onClick={this.handleVisible}>Load More</Button>\n            </div>\n        );\n    }\n}\n \nexport default ImageList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC9BC,KAAK,GAAG;MACJC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACZ,CAAC;IAAA,KAMFC,SAAS,GAAG,MAAM;MACdX,KAAK,CAACY,GAAG,CAAC,mCAAmC,EAAE;QAC3CC,OAAO,EAAE;UACL,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC,CACDC,IAAI,CAACC,IAAI,IAAI;QACV,IAAI,CAACC,QAAQ,CAAC;UAACP,MAAM,EAAEM,IAAI,CAACE;QAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACrB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;QACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAAA,KAEDE,aAAa,GAAG,MAAM;MAClB,IAAIb,OAAO,GAAG,IAAI,CAACF,KAAK,CAACE,OAAO;MAChC,IAAIc,WAAW,GAAGd,OAAO,GAAG,CAAC;MAC7B,IAAI,CAACF,KAAK,CAAC;QAACE,OAAO,EAAEc;MAAW,CAAC,CAAC;IACtC,CAAC;EAAA;EAvBDC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACd,SAAS,CAAC,CAAC;EACpB;EAuBAe,MAAMA,CAAA,EAAG;IACL,IAAIjB,MAAM,GAAG,IAAI,CAACD,KAAK,CAACC,MAAM,CAACkB,KAAK,CAAC,CAAC,EAAE,IAAI,CAACnB,KAAK,CAACE,OAAO,CAAC,CAACkB,GAAG,CAACC,GAAG,IAAI;MACnE,oBAAOzB,OAAA,CAACH,KAAK;QAAc6B,OAAO,EAAED,GAAG,CAACC,OAAQ;QAACC,cAAc,EAAEF,GAAG,CAACG;MAAW,GAA7DH,GAAG,CAACI,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyD,CAAC;IACvF,CAAC,CAAC;IACF,oBACIjC,OAAA;MAAAkC,QAAA,gBACIlC,OAAA;QAAAkC,QAAA,EAAI;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClB5B,MAAM,eACPL,OAAA,CAACF,MAAM;QAACqC,OAAO,EAAC,SAAS;QAACC,IAAI,EAAC,IAAI;QAACC,OAAO,EAAE,IAAI,CAAClB,aAAc;QAAAe,QAAA,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC;EAEd;AACJ;AAEA,eAAehC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}