{"ast":null,"code":"var _jsxFileName = \"/home/javier/React/images-classificator/images_front/src/components/ImageList/ImageList.js\";\nimport '../../App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ImageList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      visible: 3,\n      isLoading: true,\n      loadingMore: false\n    };\n    this.getImages = () => {\n      axios.get('http://127.0.0.1:8000/api/images/', {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          images: resp.data\n        });\n        console.log(resp);\n      }).catch(err => {\n        console.error(err);\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n    this.handleVisible = () => {\n      let visible = this.state.visible;\n      let new_visible = visible + 2;\n      this.setState({\n        loadingMore: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: new_visible,\n          loadingMore: false\n        });\n      }, 300);\n    };\n  }\n  componentDidMount() {\n    setTimeout(this.getImages, 1500);\n  }\n  render() {\n    let images = this.state.images.slice(0, this.state.visible).map(img => {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        picture: img.picture,\n        classification: img.classified\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.images.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No images classified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [images, this.state.loadingMore ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.state.images.length > this.state.visible ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              onClick: this.handleVisible,\n              children: \"Load More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no more images to load\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ImageList;","map":{"version":3,"names":["React","Component","axios","Image","Button","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageList","constructor","args","state","images","visible","isLoading","loadingMore","getImages","get","headers","then","resp","setState","data","console","log","catch","err","error","handleVisible","new_visible","setTimeout","componentDidMount","render","slice","map","img","picture","classification","classified","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","animation","role","length","variant","size","onClick"],"sources":["/home/javier/React/images-classificator/images_front/src/components/ImageList/ImageList.js"],"sourcesContent":["import '../../App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap';\n\nclass ImageList extends Component {\n    state = { \n        images: [],\n        visible: 3,\n        isLoading: true,\n        loadingMore: false,\n     } \n\n    componentDidMount() {\n        setTimeout(this.getImages, 1500)\n    } \n\n    getImages = () => {\n        axios.get('http://127.0.0.1:8000/api/images/', {\n            headers: {\n                'accept': 'application/json'\n            }\n        })\n        .then(resp => {\n            this.setState({images: resp.data})\n            console.log(resp)\n        })\n        .catch((err) => {\n            console.error(err)\n        })\n        this.setState({isLoading: false})\n    }\n\n    handleVisible = () => {\n        let visible = this.state.visible\n        let new_visible = visible + 2\n        this.setState({loadingMore: true})\n        setTimeout(() => {\n            this.setState({\n                visible: new_visible,\n                loadingMore: false,\n            })\n        }, 300);\n    }\n\n    render() {\n        let images = this.state.images.slice(0, this.state.visible).map(img => {\n            return <Image key={img.id} picture={img.picture} classification={img.classified} />\n        }) \n        return (\n            <div className='App'>\n                {this.state.isLoading ?\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n                :\n                <>  \n                    {this.state.images.length === 0 ?\n                        <h1>No images classified</h1>\n                    :\n                    <>\n                        {images}\n                        {this.state.loadingMore ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                        :\n                        <>\n                            {this.state.images.length > this.state.visible ?\n                            <Button variant='primary' size='lg' onClick={this.handleVisible}>Load More</Button>\n                            :\n                            <p>There are no more images to load</p>\n                            }\n                        </>\n                        }\n                    </>\n                    }\n                </>\n                }\n            </div>\n        );\n    }\n}\n \nexport default ImageList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}